{% extends 'VictoireCoreBundle:Widget:new.html.twig' %}

{% trans_default_domain "victoire" %}
{% set widgetId = widget.id|default('null') %}
{% block body %}
{% block form %}
{{ form_start(form, {'attr' : {'id' : 'victoire_widget_form' }}) }}
<div class="row">
    <div class="col-md-4">
        {{ form_row(form.title) }}
        <div class="row">
            <div class="col-md-6">
                {{ form_row(form.submitLabel) }}
            </div>
            <div class="col-md-6">
                {{ form_row(form.submitIcon) }}
            </div>
        </div>
        <div class="vic-form-group vic-well">
           {{ form_row(form.successCallback) }}
            <div id="widget-form-success-redirect" {{ form.successCallback.vars.value == 'redirect' ? '' : 'class="hidden"' }}>
                {{ form_widget(form.link) }}
            </div>
            <div id="widget-form-success-notification" {{ form.successCallback.vars.value == 'notification' ? '' : 'class="hidden"' }}>
                {{ form_row(form.successMessage) }}
            </div>
            {{ form_row(form.targetEmail) }}
            {{ form_row(form.adminSubject) }}
        </div>
        {% set params = (form.autoAnswer.vars.checked == 'on' ? 'true' : '') %}
        {{ form_row(form.autoAnswer, {'attr': {'onclick' : 'showTargetField()'}, value : params }) }}
        <div id="target_container" style="{{ form.autoAnswer.vars.checked == 'on' ? "" : "display:none" }}" class="auto_answer_extra_fields_container">
            {{ form_row(form.noReply) }}
            {{ form_row(form.subject) }}
            {{ form_row(form.message) }}
            {{ 'widget_form.form.message.help_block'|trans({}, 'victoire')|raw }}
            <div id="attachment-container">
                {{ form_row(form.attachmentUrl) }}
                {{ form_widget(form.attachmentUrl2) }}<br/>
                {{ form_widget(form.attachmentUrl3) }}<br/>
                {{ form_widget(form.attachmentUrl4) }}<br/>
                {{ form_widget(form.attachmentUrl5) }}<br/>
                {{ form_widget(form.attachmentUrl6) }}<br/>
                {{ form_widget(form.attachmentUrl7) }}
            </div>
        </div>
        <div class="vic-form-group">
            {{ form_row(form.errorNotification) }}
        </div>
        <div id="widget-form-error-messsage" {{ form.errorNotification.vars.checked == 'on' ? '' : 'class="hidden"' }}>
        {{ form_row(form.errorMessage) }}
        </div>
   </div>
   <div class="col-md-8">
        {% include "VictoireWidgetFormBundle::formCreator.html.twig" with {'form' : form} %}
        {% do form.questions.setRendered %}
    </div>
</div>
{{ form_rest(form) }}
{{ form_end(form) }}
{% endblock form %}



<script type="text/javascript">
    $vic(document).on('victoire_widget_form_create_presubmit victoire_widget_form_update_presubmit', function(event) {
        for ( instance in CKEDITOR.instances ) {
            CKEDITOR.instances[instance].updateElement();
        }
    });
    $vic('#static_widget_form_successCallback').on('change', function() {
        $vic('#widget-form-success-notification, #widget-form-success-redirect').addClass('hidden');
        $vic('#widget-form-success-' + $vic(this).val()).removeClass('hidden');
    });
    $vic(document).ready(function() {

        $vic('#static_widget_form_errorNotification').on('click', function() {
            $vic('#widget-form-error-messsage').toggleClass('hidden');
        });
    });
    $vic(function() {
        $vic( ".questions-form-list" ).sortable({
            handle: ".question-link",
            items: ".question",
            placeholder: "question-placeholder",
            update: function(event, ui) {
                setPosition();
            }
        });
        $vic( ".questions-form-list" ).disableSelection();
        $vic( ".question" )
        .find( ".question-link" )
        .prepend( "<span class='question-toggle'></span>");

        $vic( ".question-toggle" ).click(function() {
            var icon = $vic( this );
            icon.closest( ".question" ).find( ".question-content" ).toggle();
        });
    });
    var questionHolder = $vic('ul#questions-form-list');

    var $addQuestionLink = $vic('<a href="#" class="add_question_link">{{ "widget_form.form.question.new.label"|trans|raw }}</a>');
    var $newQuestionLinkLi = $vic('<li class="question-add"></li>').append($addQuestionLink);
    var targetOnOff = {{ form.autoAnswer.vars.checked == 'on' ? "true" : "false" }};

    $vic(document).ready(function() {
        questionHolder.find('li.question').each(function() {
            var id = $vic(this).data('id');
            showQuestionForm(id);
            addQuestionFormDeleteLink($vic(this));
            $vic(this).find('.question-position').val($vic('li.question').index($vic(this)));
            $vic(this).find('.selector-type').attr('onChange', 'showQuestionForm(this)');
        });
        questionHolder.append($newQuestionLinkLi);

        $addQuestionLink.on('click', function(e) {
            e.preventDefault();
            addQuestionForm(questionHolder, $newQuestionLinkLi);
        });
    });

    function showTargetField()
    {
        if (targetOnOff) {
            $vic('div#target_container').hide();
            targetOnOff = false;
        } else {
            $vic('div#target_container').show();
            targetOnOff = true;

        }

        return true;
    }

    function showExpandedField(select)
    {
        var questionType = $vic(select).val();
        var expanded_container = $vic(select).parents('.vic-col-row.vic-form-group').first().find('.expanded_container');
        if (questionType == 'radio' || questionType == 'checkbox') {
            $vic(expanded_container).show();
        } else {
            $vic(expanded_container).hide();
        }
    }

    function addQuestionForm(questionHolder, $newQuestionLinkLi) {
        var prototype = questionHolder.attr('data-prototype');
        var questionId = questionHolder.children().length - 1;
        var newForm = prototype.replace(/__name__/g, questionId);
        var $newFormLi = $vic('<li class="question" data-id="'+(questionHolder.children().length - 1)+'"></li>').append(newForm);
        $newQuestionLinkLi.before($newFormLi);
        showQuestionForm(questionId);
        $vic(".question_"+(questionId)+"_text").show();
        addQuestionFormDeleteLink($newFormLi);
    }

    function addQuestionFormDeleteLink($questionFormLi) {
        var $removeForm = $vic('<a href="#" class="pull-right"><i class="fa fa-trash-o formSlotDeleteLi"></i></a>');
        $questionFormLi.find('.question-header').append($removeForm);

        $removeForm.on('click', function(e) {
            e.preventDefault();
            $questionFormLi.remove();
        });
    }

    function setPosition()
    {
        questionHolder.find('li.question').each(function() {
            $vic(this).find('.question-position').val($vic('li.question').index($vic(this)));
        });
    }
</script>
{% endblock body %}
